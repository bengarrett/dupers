# https://taskfile.dev

# This Task file uses relative paths and expects to be located in the root of the dupers repository.
version: '3'

vars:
  FILE: ./test/files_to_check/qziD6WMRvPyk
  USERDST: "{{.USER_WORKING_DIR}}/.task"
  USERTST: "{{.USER_WORKING_DIR}}/test"
  DST: ./.task/
  DST2: ./task-number-2/
  DST3: ./task-number-three/
  TEST: ./test/
  TMP: ./test/randomfiles.*
  CHK: ./test/files_to_check/*
  B1: ./test/bucket1/*
  B2: ./test/bucket2/*
  SENSEN: ./test/sensen/*
  RUNRACE: run -race main.go

tasks:
  default:
    silent: true
    desc: this task, list all available tasks
    cmds:
     - task --list-all
  errs:
    silent: false
    desc: runs the commands to force the return of errors
    cmds:
      - go {{.RUNRACE}} invalid-command
      - go {{.RUNRACE}} invalid-command and-more-args
    ignore_error: true
  flags:
    silent: false
    desc: runs all the flags for the program and various commands
    cmds:
      - go run -race main.go
      - go {{.RUNRACE}} -mono
      - go {{.RUNRACE}} -h database
      - go {{.RUNRACE}} search --help
      - go {{.RUNRACE}} -help dupe
      - go {{.RUNRACE}} -version
      - go {{.RUNRACE}} -mono -version      
      - go {{.RUNRACE}} -mono -version -quiet
      - go {{.RUNRACE}} -m -v -q
      - go {{.RUNRACE}} database
      - go {{.RUNRACE}} db -d -m
      - go {{.RUNRACE}} -m -q -d -v -h -e -n -f -y
      - go {{.RUNRACE}} -mono -quiet -debug -version -help -exact -name -fast -delete -delete+ -sensen -yes
  lint:
    silent: false
    desc: runs a formatter and linter over the source code
    cmds:
      - cmd: gofumpt -w .
      - cmd: golangci-lint run
  race:
    silent: false
    desc: build a binary of this program with the race detection configuration
    cmds:
      - go build -v -race -o dupers main.go
      - ./dupers --version
  releases:
    silent: false
    desc: build the multiple distribution packages for this program by simulating a release
    cmds:
      - goreleaser release --clean --snapshot
      - cmd: ./dist/Linux_linux_amd64_v1/dupers --version
        platforms: [linux/amd64]
      - cmd: ./dist/Linux_linux_arm64/dupers --version
        platforms: [linux/arm64]
      - cmd: ./dist/macOS_darwin_all/dupers --version
        platforms: [darwin]
      - cmd: ./dist/Windows_windows_amd64_v1/dupers --version
        platforms: [windows/amd64]
      - cmd: ./dist/Windows_windows_386/dupers --version
        platforms: [windows/386]
  tests:
    desc: runs all of the test commands
    silent: false
    cmds:
      - task: test-export
      - task: test-db
      - task: test-dupe
      - task: test-file
      - task: test-search
      - task: clean-and-backup
  test-backup:
    desc: runs the database clean and backup commands
    silent: false
    cmds:
      - task: make-tmp
      - task: clean-and-backup
  test-export:
    desc: runs both the export and import commands
    silent: false
    cmds:
      - task: make-tmp
      - task: pre-export-import
      - task: export-import
      - task: export-invalid
      - task: move-bucket
  test-db:
    desc: runs both the database db, up, up+ and ls commands
    silent: false
    cmds:
      - task: make-tmp
      - task: up-upplus
  test-delete: # TODO broken?
    desc: runs the dupe command with the -delete flag
    silent: false
    cmds:
      - task: make-tmp
      - task: dupe-flag-delete
  test-delete+: # TODO broken?
    desc: runs the dupe command with the -delete+ flag
    silent: false
    cmds:
      - task: make-tmp
      - task: dupe-flag-delete+
  test-dupe:
    desc: runs the dupe on directories scans
    cmds:
      - task: make-tmp
      - task: dupe-directories
  test-file:
    desc: runs the dupe file scan
    silent: false
    cmds:
      - task: make-tmp
      - task: dupe-a-file
  test-search:
    desc: runs the search commands and flags
    silent: false
    cmds:
      - task: make-tmp
      - task: searches
  test-sensen: # TODO broken?
    desc: runs the dupe command with the -sensen flag
    silent: false
    cmds:
      - task: make-tmp
      - cmd: mkdir --parent {{.USERDST}}/zxcvbn
      - cmd: mkdir --parent {{.USERDST}}/asdfgh
      - cmd: mkdir --parent {{.USERDST}}/qwerty
      - task: dupe-flag-sensen
  make-tmp:
    silent: false
    internal: true
    cmds:
      - cmd:
          mkdir --verbose {{.DST}}
        ignore_error: true
      - cmd: cp --no-clobber --no-dereference {{.CHK}} {{.DST}}
      - cmd: cp --no-clobber --no-dereference {{.TMP}} {{.DST}}
      - cmd: cp --no-clobber --no-dereference {{.B1}} {{.DST}}
      - cmd: cp --no-clobber --no-dereference {{.B2}} {{.DST}}
      - cmd: cp --no-clobber --no-dereference {{.FILE}} {{.USERDST}}.runmenow.exe
      - cmd: mkdir --parent {{.USERDST}}/some-app
      - cmd: cp --no-clobber --no-dereference {{.FILE}} {{.USERDST}}/some-app/program.exe
        ignore_error: true
      - cmd: cp --recursive {{.SENSEN}} {{.USERDST}}
   #  status: 
   #    - test -d {{.DST}}
  clean:
    silent: false
    internal: false
    desc: remove the temporary hidden task directory used for the tests
    cmds:
      - cmd: rm --force --recursive --verbose {{.DST}}
        ignore_error: true
  clone-a-temp-file:
    silent: false
    internal: true
    cmds:
      - cp --no-clobber --no-dereference {{.FILE}} {{.DST}}/random-duplicate-file.tmp
      - cp --no-clobber --no-dereference {{.FILE}} {{.DST}}/random_duplicate#fileüìÅwith+unicode.tmp
  dupe-a-file:
    silent: false
    internal: true
    cmds:
      - go {{.RUNRACE}} up {{.USERDST}}
      - defer: go {{.RUNRACE}} -yes rm {{.USERDST}}
      - go {{.RUNRACE}} dupe {{.FILE}} {{.DST}}
      - go {{.RUNRACE}} -fast dupe {{.FILE}} {{.DST}}
  dupe-directories: # TODO: bunch of dupe commands cleaning and also stuck in read-only mode
    silent: false
    internal: true
    cmds:
      - go {{.RUNRACE}} up {{.USERDST}}
      - defer: go {{.RUNRACE}} -yes rm {{.USERDST}}
      - go {{.RUNRACE}} -yes dupe {{.TEST}} {{.USERDST}}
      - go {{.RUNRACE}} -yes -fast dupe {{.TEST}} {{.USERDST}}/
      - go {{.RUNRACE}} -yes dupe {{.TEST}} {{.DST}}
      - cmd: go {{.RUNRACE}} dupe {{.TEST}}xx {{.DST}}
        ignore_error: true # the cmds with ignore_error should always fail
      - cmd: go {{.RUNRACE}} -fast dupe xx{{.TEST}} {{.DST}}
        ignore_error: true
      - cmd: go {{.RUNRACE}} -yes dupe {{.TEST}} {{.DST2}} {{.DST3}}
        ignore_error: true
      - cmd: go {{.RUNRACE}} -yes dupe {{.TEST}} {{.DST2}} {{.DST3}} {{.DST}}
        ignore_error: true
      - cmd: go {{.RUNRACE}} -yes dupe {{.TEST}} {{.DST}} {{.DST2}} {{.DST3}}
        ignore_error: true
      - cmd: go {{.RUNRACE}} -yes dupe {{.DST}} # this scans all buckets, maybe make a note or a prompt? or change behavior
      - task: clone-a-temp-file
      - cmd: go {{.RUNRACE}} -yes dupe {{.DST}}  # this is also returning debug info, clean is only in READONLY mode
      - cmd: go {{.RUNRACE}} -yes -fast dupe {{.DST}}
      # TODO commands -delete -delete+ -sensen flags
  dupe-flag-delete:
    silent: false
    internal: true
    cmds:
      - go {{.RUNRACE}} up {{.USERTST}}
      - defer: go {{.RUNRACE}} -yes rm {{.USERTST}}
      - go {{.RUNRACE}} -delete -yes dupe {{.DST}} {{.USERTST}}
      - defer: rmdir {{.DST}}
  dupe-flag-delete+:
    silent: false
    internal: true
    cmds:
      - go {{.RUNRACE}} up {{.USERTST}}
      - defer: go {{.RUNRACE}} -yes rm {{.USERTST}}
      - go {{.RUNRACE}} -delete+ -yes dupe {{.DST}} {{.USERTST}}
      - defer: rmdir {{.DST}}
  dupe-flag-sensen:
    silent: false
    internal: true
    cmds:
      - go {{.RUNRACE}} up {{.USERTST}}
      - defer: go {{.RUNRACE}} -yes rm {{.USERTST}}
      - go {{.RUNRACE}} -sensen -yes dupe {{.DST}} {{.USERTST}}
      #- defer: rmdir {{.DST}}
  searches:
    silent: false
    internal: true
    cmds:
      - go {{.RUNRACE}} up {{.USERDST}}
      - defer: go {{.RUNRACE}} -yes rm {{.USERDST}}
      - cmd: go {{.RUNRACE}} -yes search
        ignore_error: true
      - go {{.RUNRACE}} -yes search asinglelineoftextwithoutspaces 
      - go {{.RUNRACE}} -yes search 'a single line of text with spaces'
      - go {{.RUNRACE}} -yes search "a single line of text with spaces"
      - task: clone-a-temp-file
      - go {{.RUNRACE}} -yes search with+unicode
      - go {{.RUNRACE}} -yes search "with+unicode"
      - go {{.RUNRACE}} -yes search "WiTh+UnIcOdE"
      - go {{.RUNRACE}} -yes search fileüìÅwith # move emoji to .task/
      - go {{.RUNRACE}} -yes -name search fileüìÅwith
      - go {{.RUNRACE}} -yes -name -exact search fileüìÅwith
      - go {{.RUNRACE}} -yes search ".task"
      - go {{.RUNRACE}} -yes -name search ".task"
      - go {{.RUNRACE}} -yes -exact search ".TASK"
      - go {{.RUNRACE}} -yes search ".TASK"
      - go {{.RUNRACE}} -yes search ".7Z"
  up-upplus:
    silent: false
    internal: true
    cmds:
      - go {{.RUNRACE}} db
      - cmd: go {{.RUNRACE}} -yes rm {{.USERDST}}
        ignore_error: true
      - go {{.RUNRACE}} up {{.USERDST}}
      - go {{.RUNRACE}} -yes rm {{.USERDST}}
      - go {{.RUNRACE}} up {{.USERDST}}
      - go {{.RUNRACE}} up {{.USERDST}}
      - go {{.RUNRACE}} ls {{.USERDST}}
      - go {{.RUNRACE}} -yes rm {{.USERDST}}
      - go {{.RUNRACE}} up+ {{.USERDST}}
      - go {{.RUNRACE}} -yes rm {{.USERDST}}
  clean-and-backup:
     silent: false
     internal: true
     cmds:
      - task: pre-export-import
      - go {{.RUNRACE}} db
      - go {{.RUNRACE}} clean
      - go {{.RUNRACE}} db
      - go {{.RUNRACE}} -quiet backup
      - go {{.RUNRACE}} -yes rm {{.USERDST}}
  pre-export-import:
    silent: true
    internal: true
    desc: this command is required before exporting a database
    cmds:
     - cmd: go {{.RUNRACE}} -yes rm {{.USERDST}}
       ignore_error: true
     - go {{.RUNRACE}} up {{.USERDST}}
  export-import:
    silent: false
    internal: true
    desc: runs both the export and import commands
    cmds:
      - defer: go {{.RUNRACE}} -yes rm {{.USERDST}}
      - go {{.RUNRACE}} up {{.USERDST}}
      - go {{.RUNRACE}} import {{.EXPORTPATH}}
      - defer: rm {{.EXPORTPATH}}
      - go {{.RUNRACE}} db
    vars:
      EXPORTPATH: # export the bucket and store the generated filename to EXPORTPATH
        sh: go {{.RUNRACE}} -quiet export {{.USERDST}}
  export-invalid:
      silent: false
      internal: true
      desc: runs export commands with invalid args
      cmds:
      - cmd: go {{.RUNRACE}} export # no feedback
        ignore_error: true
      - cmd: go {{.RUNRACE}} export thisisaninvaliddatabasebucket
        ignore_error: true
      - cmd: go {{.RUNRACE}} export thisisaninvaliddatabasebucket thisisaninvaliddatabasebucket_1
        ignore_error: true
  move-bucket:
      silent: false
      internal: true
      desc: runs the move bucket commands
      cmds:
      - go {{.RUNRACE}} up {{.USERDST}}
      - cmd: go {{.RUNRACE}} mv
        ignore_error: true
      - cmd: go {{.RUNRACE}} mv {{.USERDST}}
        ignore_error: true
      - cmd: go {{.RUNRACE}} mv thisisaninvaliddatabasebucket thisisaninvaliddatabasebucket_1
        ignore_error: true
      - cmd: go {{.RUNRACE}} -yes mv {{.USERDST}} {{.USERDST}}
        ignore_error: true
      - go {{.RUNRACE}} db
      - go {{.RUNRACE}} -yes mv {{.USERDST}} {{.USERDST}}üìÅzxcv
      - defer: go {{.RUNRACE}} -yes rm {{.USERDST}}üìÅzxcv
      - go {{.RUNRACE}} db
