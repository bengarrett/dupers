# https://taskfile.dev

# This Task file uses relative paths and expects to be located in the root of the dupers repository.
version: '3'

vars:
  FILE: ./test/files_to_check/qziD6WMRvPyk
  USERDST: "{{.USER_WORKING_DIR}}/.task"
  DST: ./.task/
  DST2: ./task-number-2/
  DST3: ./task-number-three/
  TEST: ./test/
  TMP: ./test/randomfiles.*
  CHK: ./test/files_to_check/*
  B1: ./test/bucket1/*
  B2: ./test/bucket2/*
  RUNRACE: run -race main.go

tasks:
  race:
    silent: true
    cmds:
      - go build -v -race -o dupers main.go
  errs:
    silent: true
    cmds:
      - echo -e "## Testing failures"
      - go run -race main.go invalid-command
      - go run -race main.go invalid-command and-more-args
  flags:
    silent: true
    cmds:
      - echo -e "## Testing help.\n"
      - go run -race main.go
      - echo -e "## Testing -mono.\n"
      - go run -race main.go -mono
      - echo -e "## Testing database help"
      - go run -race main.go -h database
      - echo -e "## Testing search help"
      - go run -race main.go search --help
      - echo -e "## Testing dupe help"
      - go run -race main.go -help dupe
      - echo -e "## Testing -version.\n"
      - go run -race main.go -version
      - echo -e "## Testing -mono -version.\n"
      - go run -race main.go -mono -version      
      - echo -e "## Testing -mono -version -quiet.\n"
      - go run -race main.go -mono -version -quiet
      - echo -e "## Testing -mvq.\n"
      - go run -race main.go -m -v -q
      - echo -e "## Database"
      - go run -race main.go database
      - echo -e "## DB -d -m"
      - go run -race main.go db -d -m
      - echo -e "## Debug aliases"
      - go run -race main.go -m -q -d -v -h -e -n -f
      - echo -e "## Debug flag"
      - go run -race main.go -mono -quiet -debug -version -help -exact -name -fast -delete -delete+ -sensen
  makeTmp:
    silent: false
    cmds:
      - cmd:
          mkdir --verbose {{.DST}}
        ignore_error: true
      - cmd:
          cp --no-clobber --no-dereference {{.CHK}} {{.DST}}
          cp --no-clobber --no-dereference {{.TMP}} {{.DST}}
          cp --no-clobber --no-dereference {{.B1}} {{.DST}}
          cp --no-clobber --no-dereference {{.B2}} {{.DST}}
        ignore_error: true
  removeTmp:
    silent: false
    cmds:
      - cmd:
         rm --force --recursive --verbose {{.DST}}
        ignore_error: true
  cloneTmp:
    silent: false
    cmds:
      - cmd:
         cp --no-clobber --no-dereference {{.FILE}} {{.DST}}/random-duplicate-file.tmp
      - cmd:
         cp --no-clobber --no-dereference {{.FILE}} {{.DST}}/random_duplicate#fileüìÅwith+unicode.tmp
      # - cmd:
      #    go run -race main.go up {{.DST}} # TODO fails

  dupeFile:
    silent: false
    cmds:
      - cmd:
         go run -race main.go dupe {{.FILE}} {{.DST}}
      - cmd:
         go run -race main.go -fast dupe {{.FILE}} {{.DST}}
  dupeCmds:
    silent: false
    cmds:
      # - cmd:
      #    go run -race main.go -yes dupe {{.TEST}} {{.USERDST}}
      # - cmd:
      #    go run -race main.go -yes -fast dupe {{.TEST}} {{.USERDST}}/
      # - cmd:
      #    go run -race main.go -yes dupe {{.TEST}} {{.DST}}
      # - cmd:
      #    go run -race main.go dupe {{.TEST}}xx {{.DST}}
      #   ignore_error: true # the cmds with ignore_error should always fail
      # - cmd:
      #    go run -race main.go -fast dupe xx{{.TEST}} {{.DST}}
      #   ignore_error: true
      # - cmd:
      #    go run -race main.go -yes dupe {{.TEST}} {{.DST2}} {{.DST3}}
      #   ignore_error: true
      # - cmd:
      #    go run -race main.go -yes dupe {{.TEST}} {{.DST2}} {{.DST3}} {{.DST}}
      #   ignore_error: true
      # - cmd:
      #    go run -race main.go -yes dupe {{.TEST}} {{.DST}} {{.DST2}} {{.DST3}}
      #   ignore_error: true
      - cmd:
         go run -race main.go -yes dupe {{.DST}} # this scans all buckets, maybe make a note or a prompt? or change behavior
         # THIS SHOULD NOT BE running debug
      - task: cloneTmp
      - cmd:
         go run -race main.go -yes dupe {{.DST}}  # this is also returning debug info, clean is only in READONLY mode
      - cmd:
         go run -race main.go -yes -fast dupe {{.DST}}
      # TODO commands -fast, -delete -delete+ -sensen flags

  searchCmds:
    silent: false
    cmds:
      - cmd:
         go run -race main.go -yes search
        ignore_error: true
      - cmd:
         go run -race main.go -yes search asinglelineoftextwithoutspaces 
      - cmd:
         go run -race main.go -yes search 'a single line of text with spaces'
      - cmd:
         go run -race main.go -yes search "a single line of text with spaces"
      - task: cloneTmp
      - cmd:
         go run -race main.go -yes search with+unicode
      - cmd:
         go run -race main.go -yes search "with+unicode"
      - cmd:
         go run -race main.go -yes search "WiTh+UnIcOdE"
      - cmd:
         go run -race main.go -yes search fileüìÅwith # move emoji to .task/
      - cmd:
         go run -race main.go -yes -name search fileüìÅwith
      - cmd:
         go run -race main.go -yes -name -exact search fileüìÅwith
      - cmd:
         go run -race main.go -yes search ".task"
      - cmd:
         go run -race main.go -yes -name search ".task"
      - cmd:
         go run -race main.go -yes -exact search ".TASK"
      - cmd:
         go run -race main.go -yes search ".TASK"
      - cmd:
         go run -race main.go -yes search ".7Z"

  databaseCmds:
    silent: false
    cmds:
      - cmd:
         go {{.RUNRACE}} db
      - cmd:
         go {{.RUNRACE}} -yes rm {{.USERDST}}
      # - cmd:
      #    go run -race main.go up {{.USERDST}}
      # - cmd:
      #    go run -race main.go rm {{.USERDST}}
      # - cmd:
      #    go run -race main.go up+ {{.USERDST}}
      # - cmd:
      #    go run -race main.go ls {{.USERDST}}
      # - cmd:
      #    go run -race main.go rm {{.USERDST}}
      # todo: backup, up+, ls , export, rm, ls, import, ls, rm
      # todo: backup, clean, etc

      # - cmd:
      #    go run -race main.go rm {{.USERDST}}
  one:
    silent: false
    cmds:
      - task: makeTmp
      - task: databaseCmds
      #- task: dupeFile
      #- task: dupeCmds
      #- task: searchCmds
      #- task: removeTmp
  lint:
    silent: false
    cmds:
      - cmd: gofumpt -w .
      - cmd: golangci-lint run
  
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 